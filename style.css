/* Importiere Domus als Custom Font */
/* 1. Alle Elemente mit border-box, damit padding nicht zur Gesamtbreite hinzugerechnet wird */
*, *::before, *::after {
  box-sizing: border-box;
}


body {
  overflow-x: hidden;
  width: 100%;
  max-width: 100vw;
  position: relative;
  
}

body {
  font-family: "jaf-domus", sans-serif;
  font-weight: 400;
  font-style: normal;
  margin: 0;
  padding: 0;
  line-height: 1.4;
  color: var(--navy);
  background-color: var(--light-pink);
  box-sizing: border-box;
}


:root {
  --navy:        #092b54;
  --mid-purple:  #373283;
  --teal:        #06e789;
  --light-pink:  #fbfdf5;
  --light-purple:#E4DAFC;
  --light-green: #b6ffdb;
  font-size: clamp(14px, 1.5vw, 18px);
}

html {
  overflow-x: hidden;
  overflow-y: auto;
}
body {
  overflow: visible; /* kein overflow:hidden mehr hier! */
}

/* → Sticky Navbar minimal: */
.navbar {
  position: sticky;
  top: 0;
  width: 100%;
  z-index: 1000; /* über allem anderen */
}

/* Navigation mit Burger-Menü */
.navbar {
  background-color: var(--light-green);
  width: 100%;
  position: sticky;
  top: 0;
  z-index: 1000;
  padding: 1rem 2rem;
  box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}
.nav-content {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.nav-logo {
  font-size: 1.4rem;
  font-weight: bold;
  color: var(--teal);
}
.nav-links {
  list-style: none;
  display: flex;
  gap: 2rem;
  margin: 0;
  padding: 0;
}
.nav-links a {
  color: var(--mid-purple);
  text-decoration: none;
  font-weight: 500;
  font-size: 1rem;
}
.nav-links a:hover {
  color: var(--mid-purple);
}
.burger {
  display: none;
  flex-direction: column;
  gap: 4px;
  cursor: pointer;
}
.burger div {
  width: 25px;
  height: 3px;
  background-color: var(--teal);
}
@media (max-width: 768px) {
  .nav-links {
    position: absolute;
    top: 70px;
    right: 2rem;
    background-color: var(--light-green);
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
    border-radius: 8px;
    display: none;
  }
  .nav-links.active {
    display: flex;
  }
  .burger {
    display: flex;
  }
}

/* Header: 3-Spalten-rund */
.hero-header {
  position: relative;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  height: 100vh;
}
.hero-part {
  width: 100%;
  height: 100vh;
}
.part1 { background-color: var(--light-purple); }
.part2 { background-color: var(--light-pink); }
.part3 { background-color: var(--teal); }

/* Text-Box über dem Grid, jetzt vertikal gestapelt */
#Headline {
  position: absolute;
  top: 50%;                    /* z. B. 15% vom linken Rand */
  transform: translateY(-50%);   /* nur vertikal zentrieren */
  position: absolute;
  display: flex;
  flex-direction: column;
  align-items: flex-start;         
  text-align: left;
  font-size: clamp(4rem, 8vw, 8rem);   /* min 5rem, ideal 8vw, max 10rem */
  font-weight: 800;
  color: var(--mid-purple);
  margin: 0 0 0.5rem;
  text-align: left;
   z-index: 4;
}



/* Hero-Kreise */
.hero-circle {
  position: absolute;
  border-radius: 50%;
  opacity: 1;
}

.circle1 {
  background-color: var(--light-green);
  top: 10%;
  left: 10%;
  width: clamp(200px, 25vw, 400px);
  height: clamp(200px, 25vw, 400px);
    background-color: var(--teal)
}

.circle2 {
  background-color: var(--light-purple);
  top: 15%;
  right: 15%;
  position: absolute;
  top: -5%;    /* ragt 5% über den oberen Viewport-Rand hinaus */
  right: -5%;  /* ragt 5% über den rechten Viewport-Rand hinaus */
  width: clamp(300px, 25vw, 600px);
  height: clamp(300px, 25vw, 600px);
  background-color: var(--mid-purple);
  /* Breite/Höhe beibehaltet eure clamp()-Werte */
}

.circle3 {
  background-color: var(--teal);
  bottom: -7%;
  left: 40%;
  width: clamp(240px, 35vw, 480px);
  height: clamp(240px, 35vw, 480px);
  background-color: var(--light-purple);
   z-index: 2;
}



@media (max-width: 768px) {
  /* Hero-Hintergrund nur noch Light-Pink */
  .hero-header {
    background: var(--light-pink);
  }
  /* alle farbigen Part-Divs ausblenden */
  .hero-part {
    display: none;
  }
  /* circle2 verschwindet */
  .circle2 {
    display: none;
  }

    /* circle1 doppelt so groß lassen */
  .circle1 {
    width:  clamp(300px, 30vw, 600px) !important;
    height: clamp(300px, 30vw, 600px) !important;
  }

  /* circle3 am größten belassen */
  .circle3 {
    width:  clamp(350px, 35vw, 700px) !important;
    height: clamp(350px, 35vw, 700px) !important;
  }


/* Hero-Text: Block halb so breit wie der Viewport */
.hero-text {
  width: 70vw;
  max-width: none;
  left: 6%;   
}
}

/* Weitere Sektionen bleiben unverändert, z.B. .content-section, #map, etc. */

h1, h2 {
  color: var(--mid-purple);
  font-size: 2.3rem;
  margin-bottom: 0.5rem;
  padding: 0 6rem;
  line-height: 1.1;
}
p {
  
  color: varl(--light-pink);
  font-size: 1.2rem;
   padding: 0 6rem;

}



a {
  color: var(--navy);
  text-decoration: none;
}

a:hover {
  color: var(--mid-purple);
}

button {
  background-color: var(--teal);
  color: white;
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
}

button:hover {
  /* dunklerer Effekt auf Basis der neuen Teal-Farbe */
  filter: brightness(0.9);
}

/* Linke Spalte: 40% Breite, neon-grüner Text */
.was-was-waere-wenn > .column:first-child {
  flex: 0 0 40%;  
  font-size: 2rem;
  text-align: left;
  color: var(--teal);
}

/* Rechte Spalte: 55% Breite, regular font-weight */
.was-was-waere-wenn > .column:last-child {
  flex: 0 0 55%;    /* Innenabstand rechts */
  text-align: left;
  color: white;
  
}

.was-was-waere-wenn > .column > h3 {
font-size: 2.3rem;
font-weight: 510;
line-height: 1.25;

}
.was-was-waere-wenn > .column > h3,
.was-was-waere-wenn > .column > p {
padding: none;
padding-left: 6rem;
}

.was-was-waere-wenn > .column {
  /* bestehende Regeln… */
  display: flex;             /* macht jede Column zum Flex-Container */
  flex-direction: column;    /* Stapelung der Elemente (h3 oder p) */
  justify-content: center;   /* vertikal zentrieren */
  align-items: center;       /* horizontal zentrieren */
  text-align: center;        /* Textinhalt ebenfalls mittig setzen */
}

/* === Anpassung „Was wäre wenn“-Section === */

/* Größere Schrift für beide Spalten */
.was-was-waere-wenn > .column {
  font-size: 1.5rem;
}

/* Auf kleinen Bildschirmen: Spalten untereinander */
@media (max-width: 768px) {
  .was-was-waere-wenn {
    flex-wrap: wrap;    /* erlaubt Umbruch */
  }
  .was-was-waere-wenn > .column {
    flex: 0 0 100%;     /* jede Spalte nimmt volle Breite */
    text-align: center;   /* Text linksbündig */
  }
}





#wasbringtdirdas {
height: 100vh;

}



#waswärewenn {
  background-color: var(--mid-purple);
  color:var(--light-pink);
  height: 100vh; 
}

/* Desktop: 40/60-Split */
#waswärewenn {
  display: grid;
  grid-template-columns: 50% 50%;
}

/* Mobile: eine Spalte */
@media (max-width: 768px) {
 #waswärewenn {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
}

/* Spezielle Text-Styles für die „Was wäre wenn“-Section */
#Überschrift-teal {
  font-size: 2.2rem;        /* gewünschte Schriftgröße */
  color: var(--teal);        /* Farbe Teal */
  line-height: 1.3;          /* engerer Zeilenabstand */
  font-weight: 550;          /* mittleres Schriftgewicht */
}

@media (max-width: 768px) {
 #waswärewenn {
    padding-top: 3rem;
    padding-bottom: 3rem;
  }
}

#waswärewenn {
  /* …deine bisherigen Grid-/Layout-Regeln… */
  min-height: 100vh;  /* mindestens Viewport-Höhe */
  height: auto;       /* keine feste Höhe mehr */
  box-sizing: border-box;
}

#wasbringtdirdas {
  /* …deine bisherigen Grid-/Layout-Regeln… */
  min-height: 100vh;  /* mindestens Viewport-Höhe */
  height: auto;       /* keine feste Höhe mehr */
  box-sizing: border-box;
}


#waswärewenn > .column:first-child::before {
  content: "";
  display: block;           /* WICHTIG */
  position: absolute;
  width: 100%;
  height: 100%;
  background: url('assets/IHK\ Ballomat.jpg') center/cover no-repeat;
  opacity: 1;
  z-index: -1000;
}

#waswärewenn > .column:first-child {
  position: relative;       /* Basis für das absolute Pseudo-Elt */
  z-index: 1;               /* Text darüber */
}

/* Was-bringt-dir-das? – 2-Spalten-Grid, je 50 % Breite */
#wasbringtdirdas {
  display: grid;
  grid-template-columns: 50% 50%;
  align-items: stretch;   /* sorgt dafür, dass beide Spalten gleich hoch werden */
}

/* In der zweiten Spalte das Bild spaltenfüllend ausrichten */
#wasbringtdirdas > .column:nth-child(2) img {
  width: 100%;            /* volle Spaltenbreite */
  height: 100%;           /* volle Spaltenhöhe */
  object-fit: cover;      /* skaliert so, dass nichts verzerrt wird */
  display: block;         /* verhindert extra Whitespace */
}


/* ============================= */
/* Was bringt dir das? – 2-Spalten */
/* ============================= */
#wasbringtdirdas {
  display: grid;
  grid-template-columns: 50% 50%;
  /* 1fr stellt sicher, dass es genau eine Reihe gibt, die sich aufteilt */
  grid-template-rows: 1fr;      
  /* oder: grid-auto-rows: 1fr; wenn Du mehrere Reihen planst */
  align-items: stretch;          /* alle Zellen gleich hoch */
  gap: 0;                        /* kein extra Abstand zwischen den Zellen */
  min-height: 100vh;             /* mindestens volle Viewport-Höhe */
  box-sizing: border-box;
}

/* linke Spalte bleibt flexibles Text-Layout */
#wasbringtdirdas > .column:first-child {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* rechte Spalte – das Bild füllt die Zeilenhöhe */
#wasbringtdirdas > .column:last-child {
  position: relative;            /* falls Du später noch Pseudo-Elemente brauchst */
}
#wasbringtdirdas > .column:last-child img {
  display: block;                /* entfernt Inline-Block-Abstände */
  width: 100%;                   /* volle Spaltenbreite */
  height: 100%;                  /* volle Zeilenhöhe */
  object-fit: cover;             /* skaliert ohne Verzerrung */
}

@media (max-width: 768px) {
  /* auf Mobil: statt Grid ein Column-Flex-Layout */
  #wasbringtdirdas {
    display: flex;
    flex-direction: column;
  }

  /* Bild-Column (ist das zweite .column) zuerst anzeigen */
  #wasbringtdirdas > .column:nth-child(2) {
    order: 1;
  }

  /* Text-Column (erste .column) danach */
  #wasbringtdirdas > .column:nth-child(1) {
    order: 2;
  }
}






#Teambeschreibung {
text-align: left;
padding-bottom: 4rem;
}




/* das eigentliche Grid: 3 Spalten, 2 Reihen */
.team-grid__container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2rem; /*nacch unten */
  justify-items: center;
}

/* jedes Team-Mitglied */
.team-grid__member {
  display: flex;
  flex-direction: column;
  align-items: center;
  max-width: 200px; /* optional */
}

/* rundes Bild */
.team-grid__member img {
  width: 150px;
  height: 150px;
  object-fit: cover;
  border-radius: 50%;
  margin-bottom: 1rem;
}

/* Name und Rolle */
.team-grid__name {
  font-weight: 700;
  margin: 0.5rem 0 0.25rem;
}

.team-grid__role {
  font-weight: 300;
  margin: 0;
  font-size: 0.95rem;
}

/* Responsive: auf Mobil untereinander */
@media (max-width: 768px) {
  .team-grid__container {
    grid-template-columns: 1fr;  /* eine Spalte */
  }
}


/* Name & Rolle jeweils nur eine Zeile */
.team-grid__name,
.team-grid__role {
  white-space: nowrap;       /* kein Umbruch */
  overflow: hidden;          /* überlaufenden Text verstecken */
  text-overflow: ellipsis;   /* am Ende mit „…“ anzeigen */
}

/* Zwei-Spalten-Layout mit vollem Viewport-Höhe */



#team1 {
  display: grid;
  grid-template-columns: 1fr 1fr;
  max-height: 100vh;  /* at least full-screen, but grows if children overflow */
  box-sizing: border-box;
  overflow: hidden;   /* contain any absolutely-positioned bits */
  position: relative; /* establish a new stacking context */
}

/* Auf kleineren Bildschirmen: 1-Spalten-Layout */
@media (max-width: 768px) {
  #team1 {
    grid-template-columns: 1fr;
    height: auto;                   /* passt die Höhe dem Inhalt an */
  }
}



/* Entferne sämtliches Padding/Margin in der Bild-Spalte */
#team1 .column:nth-child(2) {
  padding: 0;
  margin: 0;
}

/* Bild füllt exakt die gesamte Spalte */
#team1 .column:nth-child(2) img {
  display: block;          /* keine Inline-Whitespace */
  width: 100%;             /* volle Spaltenbreite */
  height: 100%;            /* volle Spaltenhöhe */
  object-fit: cover;       /* Zuschneiden ohne Verzerrung */
}


#team1 {
  display: grid;
  grid-template-columns: 1fr 1fr;
  min-height: 100vh;  /* nicht height */
}


#team1 .column:first-child {
  display: flex;             /* Flex-Container */
  flex-direction: column;    /* Elemente übereinander */
  justify-content: center;   /* vertikal zentrieren */
  align-items: center;       /* horizontal zentrieren */        /* Text in der Mitte */
}


.team-image {
  flex: 1;
  overflow: hidden;
}

.team-image img {
  height: 100%;
  width: 100%;
  object-fit: cover;
}





/* 1) Entferne oder überschreibe das Flexbox-Layout auf #partner */
#partner {
  display: block;
  text-align: left; /* sorgt dafür, dass inline-Block-Kinder (die Karte) zentriert werden */
  height: 100vh; 
   overflow: visible; 
}

/* 3) Auf kleinen Bildschirmen 100% Breite */
@media (max-width: 768px) {
  #partner #map {
    width: 100%;
    max-width: none;
    margin: 1rem 0;
  }
}

@media (max-width: 768px) {
  .bisherige-stationen .bisherige-columns {
    flex-wrap: wrap; /* Erlaubt Umbruch */
  }
  /* Linke Spalte: volle Breite, linksbündig */
  .bisherige-stationen .column.left {
    flex: 0 0 100%;
    margin: 0;
    text-align: left;
  }
  /* Rechte Spalte: 80% Breite, unterhalb, am rechten Rand, linksbündig */
  .bisherige-stationen .column.right {
    flex: 0 0 80%;
    margin: 1rem 0 0 auto; /* oben 1rem, links auto = rechts ausrichten */
    text-align: left;
  }
}
@media (max-width: 768px) {
  .bisherige-stationen .column.right {
    flex: 0 0 50%;         /* genau die rechte Hälfte */
    margin: 1rem 0 0 auto; /* oben 1rem, links auto = ganz rechts */
    text-align: left;      /* Text linksbündig */
  }
}



#map {
  height: 65%;
  width: 65%;
  margin: 0 3rem;

}

.site-footer {
  background-color: var(--navy);
  color: white;
  padding: 2rem 1rem;
  text-align: center;
  margin: 0 -1.5rem;
}

.footer-legal a {
  color: white;
}



.projekt-split {
  display: flex;
  flex-wrap: wrap;

}

.projekt-text {
  background-color: var(--light-pink);
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.projekt-colorblock {
  flex: 1 1 50%;
  background-color: var(--light-green);
}

.col-50 {
  flex: 0 0 50%;
  max-width: 50%;
}

.order-left { order: 1; }
.order-right { order: 2; }



.two-col {
  display: grid;
  grid-template-columns: 1fr 1fr;
  min-height: 100vh;          /* volle Bildschirmhöhe */
  gap: 2rem;                  /* Abstand zwischen den Spalten */
}

.two-col .text {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* Bild-Spalte */
.two-col .media img {
  width: 100%;
  height: 100%;               /* füllt voll Viewport-Höhe */
  object-fit: cover;          /* skaliert ohne Verzerrung */
  display: block;             /* entfernt Inline-Block-Abstände */
}

/* Auf kleinen Bildschirmen: untereinander statt nebeneinander */
@media (max-width: 768px) {
  .two-col {
    grid-template-columns: 1fr;   /* nur eine Spalte */
  }
  .two-col .media img {
    height: auto;                 /* Bildhöhe passt sich Inhalt an */
  }
}

#Gruppenbild {
  height: 100vh;
  width: 100%;
  overflow: hidden;
}

#Gruppenbild img {
  height: 100%;
  width: 100%;
  object-fit: cover;
  object-position: center top; /* <-- wichtig: zeigt den unteren Teil des Bildes */
  display: block;
}

#team2 {
  display: flex;
  flex-direction: column; /* falls du auch einen Titel etc. drin hast */
  justify-content: center; /* vertikal zentriert */
  align-items: center;     /* horizontal zentriert */
  min-height: 100vh;       /* volle Höhe des Viewports */
  padding: 2rem;
  box-sizing: border-box;
  background-color: #373283;
}


.team-grid__container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);  /* genau drei Spalten */
  gap: 3rem 4rem;                         /* vertikal/horizontaler Abstand */
  justify-items: center;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

.team-grid__member img {
  width: 180px;
  height: 180px;
  object-fit: cover;
  border-radius: 50%;
  display: block;
  margin: 0 auto;
}

.team-grid__name {
  font-size: 1.2rem;
  font-weight: bold;
  margin-top: 0.5rem;
 color: var(--light-pink);
}

.team-grid__role {
  font-size: 1rem;
 color: var(--light-pink);
}




/*Ballomat*/

#Ballomat {
  display: grid;
  grid-template-columns: 30% 70%;
  gap: 2rem; /* optional: Abstand zwischen den Spalten */
  min-height: 100vh;
  align-items: center; /* optional: vertikal zentrieren */
  padding: 2rem;
  box-sizing: border-box;
}

#Ballomat .media {
  height: 100vh;         /* volle Bildschirmhöhe */
  overflow: hidden;      /* alles außerhalb des Containers wird abgeschnitten */
  display: flex;
  align-items: center;
  justify-content: center;
}

#Ballomat .media img {
  height: 100%;
  width: auto;                /* automatische Breite passend zur Höhe */
  max-height: 130vh;
  object-fit: contain;        /* zeigt das ganze Bild, ohne es zu beschneiden */
  object-position: center;
  display: block;
  margin-top: -1vh;
  margin-bottom: -5vh;
}

@media (max-width: 768px) {
  /* 1) Section passt sich jetzt dem Bild an */
  #Ballomat {
    display: block;       /* kein Grid mehr */
    grid-template-columns: none;
    min-height: auto;     /* entfernt 100vh */
    height: auto;         /* passt Höhe dem Inhalt an */
    padding: 1rem;        /* optional Innenabstand */
  }

  /* 2) .media-Box wird flexibel, kein Zuschneiden */
  #Ballomat .media {
    height: auto;         /* passt sich dem Bild an */
    overflow: visible;    /* zeigt das ganze Bild */
    margin: 0 auto;       /* zentriert */
    padding: 0;           /* entfernt innen */
  }

  /* 3) Bild wird skaliert und bleibt in der Section */
  #Ballomat .media img {
    width: 100%;          /* spaltenfüllend */
    height: auto;         /* behält Seitenverhältnis */
    object-fit: contain;  /* zeigt komplettes Bild */
    object-position: center;
    margin: 0;            /* keine negativen Margins */
  }
}




#WDC {
  display: grid;
  grid-template-columns: 60% 40%; /* oder z. B. 40% 60% */
  align-items: center;
  min-height: 100vh;
  box-sizing: border-box;

}




.site-footer {
  background-color: var(--light-green);
  color: var(--mid-purple);
  padding: 2rem 1rem;
  text-align: center;
  font-size: 0.95rem;
}

.site-footer a {
  color: var(--mid-purple);
  text-decoration: none;
  margin: 0 0.75rem;
  font-weight: 500;
}

.site-footer a:hover {
  text-decoration: underline;
}

.footer-content {
  max-width: 800px;
  margin: 0 auto;
}

.footer-links,
.footer-legal {
  margin-top: 1rem;
}

.footer-legal a {
  font-size: 0.85rem;
  color: var(--teal);
}

.navbar {
  position: sticky;
  top: 0;
  z-index: 1000;
}


#partner {
  display: flex;
  flex-direction: column;
  align-items: center;       /* horizontal zentrieren */
  justify-content: center;   /* vertikal zentrieren */
  min-height: 100vh;         /* volle Bildschirmhöhe */
  text-align: left;
  box-sizing: border-box;
}

/* Teal-Farbe für Überschriften in der Partner-Section */
#partner h1,
#partner h2 {
  color: var(--teal);
  text-align: left;
    padding: 0;      /* entfernt das 6rem-Padding nur hier */
  margin-left: 0;   /* optional: setzt den oberen Abstand zurück */
  text-align: left;
}







#map {
  width: 80%;
  max-width: 800px;
  height: 400px;
  border-radius: 10px;
  margin-top: 2rem;
}

/* 1) Auf 2 Spalten mit 50vw / Rest setzen */
#bisherigestationen {
  display: grid;
  grid-template-columns: 50vw 1fr;   /* linke Spalte = 50% der Viewport-Breite */
  align-items: stretch;              /* Höhe beider Spalten gleich halten */
  gap: 0;                            /* falls du Abstand brauchst, hier anpassen */
}

/* 2) Media-Box auf volle Spaltenfläche ausdehnen */
#bisherigestationen .media {
  width: 100%;       /* füllt die linke Grid-Spalte */
  height: 100%;      /* passt sich der Grid‑Zeilenhöhe an */
  overflow: hidden;  /* bescheidet alles außerhalb */
}

/* 3) Bild skaliert und deckt die gesamte Media-Box ab */
#bisherigestationen .media img {
  width: 100%;
  height: 100%;
  object-fit: cover;       /* skaliert + zuschneiden */
  object-position: center; /* zentriert den Bildausschnitt */
  display: block;
}

#bisherigestationen {
  display: grid;
  grid-template-columns: 50vw 1fr;
  align-items: center;
  gap: 0;
  height: 80vh;       /* z. B. auf 80% des Viewports */
  overflow: hidden;   /* vermeidet Scroll */
}

#bisherigestationen .media {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

#bisherigestationen .media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  display: block;
}



#partner {
  background-color: #373283;
  color: var(--light-pink);
}



/* 2) Erlaube nur dem Popup‑Layer überzulaufen */
.leaflet-popup-pane {
  overflow: visible !important;
  z-index: 10000;      /* sicher oberhalb aller Map-Layer */
}

/* 3) Und die Popup‑Inhalte (Wrapper & Spitze) ebenfalls */
.leaflet-popup-content-wrapper,
.leaflet-popup-tip {
  overflow: visible !important;
}

/* Mobile: nur noch eine Spalte, Bild kommt zuerst */
@media (max-width: 768px) {
  .two-col {
    grid-template-columns: 1fr;
  }
  .two-col .media {
    order: -1; /* Bild vor dem Text */
  }
}


/* === 2. Team-Grid === */
.team-grid__container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2rem;
  justify-items: center;
}

/* Tablet: 2 Personen pro Reihe */
@media (max-width: 992px) {
  .team-grid__container {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Mobile: 1 Person pro Reihe */
@media (max-width: 600px) {
  .team-grid__container {
    grid-template-columns: 1fr;
  }
}


/* === WDC-Section als Two-Col === */
#WDC.two-col {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;
  min-height: 100vh;
  box-sizing: border-box;
}

/* Linke Spalte: Text vertikal zentrieren */
#WDC.two-col .text {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* Rechte Spalte: Bild füllt die Spalte komplett */
#WDC.two-col .media img {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Mobile: untereinander, Bild zuerst */
@media (max-width: 768px) {
  #WDC.two-col {
    grid-template-columns: 1fr;
  }
  #WDC.two-col .media {
    order: -1; /* Bild ganz oben */
  }
}

.navbar {
  position: sticky;
  top: 0;
  width: 100%;
  z-index: 1000; /* damit sie über dem Content bleibt */
}

/* 1. Partner-Section als Positionierungs-Kontext */
#partner {
  position: relative;
  overflow: hidden; /* sorgt dafür, dass Kreise nicht rausfallen */
}

/* 2. Kreise absolut im Partner-Bereich platzieren */
/* Du kannst hier die gleichen Werte aus .circle1/.circle2/.circle3 übernehmen */
#partner .circle1 {
  background-color: var(--light-green);
  top: 10%;
  left: -3%;
  width: clamp(200px, 25vw, 400px);
  height: clamp(200px, 25vw, 400px);
    background-color: var(--teal)
}

#partner .circle2 {
  background-color: var(--light-purple);
  top: 15%;
  right: 15%;
  position: absolute;
  top: -5%;    /* ragt 5% über den oberen Viewport-Rand hinaus */
  right: -5%;  /* ragt 5% über den rechten Viewport-Rand hinaus */
  width: clamp(300px, 25vw, 600px);
  height: clamp(300px, 25vw, 600px);
  background-color: var(--teal);
  
  /* Breite/Höhe beibehaltet eure clamp()-Werte */
}

#partner .circle3 {
  background-color: var(--teal);
  bottom: -30%;
  left: 40%;
  width: clamp(240px, 35vw, 480px);
  height: clamp(240px, 35vw, 480px);

  color:#06e789
}

#waswärewenn h2 {
  color:#06e789;
}

body {
  overflow-x: hidden;
}
body {
  overflow: visible; /* kein overflow:hidden mehr hier! */
}


.navbar {
  position: sticky;
  top: 0;
  width: 100%;
  z-index: 1000; /* über allem anderen */
}

.media {
  position: relative;    /* legt den Bezugspunkt fest */
  width: 100%;           /* optional, je nach Layout */
  height: auto;          /* passt sich dem Inhalt an */
  overflow: visible;     /* sorgt dafür, dass Überstände sichtbar bleiben */
}

/* Grund-Bild */
.media img:first-of-type {
  display: block;        /* entfernt Inline-Whitespace */
  width: 100%;           /* füllt die Breite der .media-Box */
  height: auto;
  position: relative;    /* kann auch weggelassen werden, ist Standard */
  z-index: 1;            /* ganz unten */
}

/* Balken-Bild, wird absolut übereinander gelegt */
.media img:last-of-type {
  position: absolute;    /* aus dem Dokumentenfluss lösen */
  top: 0;
  left: 0;
  width: 100%;           /* passt sich der .media-Box an */
  height: auto;
  z-index: 2;            /* liegt über dem ersten Bild */
  pointer-events: none;  /* falls es Klicks durchlassen soll */
}

#WDC.two-col {
  display: grid;
  grid-template-columns: 1fr 1fr;
  align-items: stretch;   /* Spalten gleich hoch */
  min-height: 100vh;
  gap: 2rem;
}

/* die Media-Box als Positionierungs-Container */
#WDC.two-col .media {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

/* das Hintergrund-Gruppenbild */
#WDC.two-col .media img.bg {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* das Banner-Overlay ganz unten */
#WDC.two-col .media img.overlay {
  position: absolute;
  left: 0;
  width: 100%;
  height: auto;
  object-fit: contain;
  pointer-events: none;
  z-index: 2;
}

/* 1. Grid-Spalten auf volle Höhe dehnen */
#WDC.two-col {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;
  align-items: stretch;    /* ← ganz wichtig! */
  min-height: 100vh;
}



/* Bild automatisch auf Höhe der Navbar beschränken */
.nav-logo img {
  /* oder was bei dir passt */
  width: auto;
  display: block;
}

/* Falls du lieber das <a> um das Bild zentrieren willst: */
.nav-logo a {
  display: inline-block;
}


.nav-logo img {
  display: block;                  /* so height really applies */
  height: clamp(2.5rem, 10vw, 6rem);
  width: auto;                     /* keep aspect ratio */
}

.navbar {
  /* leg die Navbar-Höhe mit clamp() fest: nie kleiner als 3rem, ideal 8vh, nie größer als 6rem */
  height: clamp(3rem, 8vh, 6rem);
  padding: 0 clamp(2rem, 5vw, 4rem);  /* nur noch horizontalen Innenabstand */
  display: flex;
  align-items: center;               /* Logo & Links vertikal zentrieren */
  position: sticky;
  top: 0;
  z-index: 1000;
}

.nav-content {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
}

.nav-logo img {
  max-height: 100%;  /* niemals größer als die Navbar */
  width: auto;       /* Seitenverhältnis beibehalten */
  display: block;
}

#team1 h2 {

  padding-left: 0;
}
